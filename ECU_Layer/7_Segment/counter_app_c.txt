/* 
 * File:   application.c
 * Author: user
 *
 * Created on June 24, 2023, 3:39 PM
 */

#include "application.h"

/*
led_t led1 = {.port_name = PORTC_INDEX, .pin = GPIO_PIN0, .led_status = GPIO_LOW};

button_t btn_high = {
    .button_pin.port = PORTC_INDEX,
    .button_pin.pin = GPIO_PIN7,
    .button_pin.direction = GPIO_DIRECTION_INPUT,
    .button_pin.logic = GPIO_LOW,
    .button_state = BUTTON_RELEASED,
    .button_connection = BUTTON_ACTIVE_HIGH
};

relay_t relay_1 = {
    .relay_port = PORTC_INDEX,
    .relay_pin = GPIO_PIN0,
    .relay_status = RELAY_OFF_STATUS
};
 
dc_motor_t dc_motor_1 = {
    .dc_motor_pin[0].port = PORTC_INDEX,
    .dc_motor_pin[0].pin = GPIO_PIN0,
    .dc_motor_pin[0].direction = GPIO_DIRECTION_OUTPUT,
    .dc_motor_pin[0].logic = DC_MOTOR_OFF_STATUS,
    .dc_motor_pin[1].port = PORTC_INDEX,
    .dc_motor_pin[1].pin = GPIO_PIN1,
    .dc_motor_pin[1].direction = GPIO_DIRECTION_OUTPUT,
    .dc_motor_pin[1].logic = DC_MOTOR_OFF_STATUS
};
 
uint8 seg_common_anode_values[10] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90};
uint8 seg_common_cathode_values[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
*/

segment_t seg1 = {
    .segment_pins[0].port = PORTC_INDEX,
    .segment_pins[0].pin = GPIO_PIN0,
    .segment_pins[0].direction = GPIO_DIRECTION_OUTPUT,
    .segment_pins[0].logic = GPIO_LOW,
    .segment_pins[1].port = PORTC_INDEX,
    .segment_pins[1].pin = GPIO_PIN1,
    .segment_pins[1].direction = GPIO_DIRECTION_OUTPUT,
    .segment_pins[1].logic = GPIO_LOW,
    .segment_pins[2].port = PORTC_INDEX,
    .segment_pins[2].pin = GPIO_PIN2,
    .segment_pins[2].direction = GPIO_DIRECTION_OUTPUT,
    .segment_pins[2].logic = GPIO_LOW,
    .segment_pins[3].port = PORTC_INDEX,
    .segment_pins[3].pin = GPIO_PIN3,
    .segment_pins[3].direction = GPIO_DIRECTION_OUTPUT,
    .segment_pins[3].logic = GPIO_LOW,
    .segment_type = SEGMENT_COMMON_ANODE
};

pin_config_t seg1_en = {.port = PORTD_INDEX, .pin = GPIO_PIN0, .direction = GPIO_DIRECTION_OUTPUT, .logic = GPIO_LOW};
pin_config_t seg2_en = {.port = PORTD_INDEX, .pin = GPIO_PIN1, .direction = GPIO_DIRECTION_OUTPUT, .logic = GPIO_LOW};

uint8  number = 0 ;

int main() {
    Std_ReturnType ret = E_NOT_OK;
    application_initialize();
    while(1){
        //__delay_ms(000);
        
        for(int count = 0; count < 100; count++){
            ret = seven_segment_write_number(&seg1, (uint8)(number%10));
            ret = gpio_pin_write_logic(&seg2_en, GPIO_HIGH);
            __delay_us(5000);
            ret = gpio_pin_write_logic(&seg2_en, GPIO_LOW);
        
            ret = seven_segment_write_number(&seg1, (uint8)(number/10));
            ret = gpio_pin_write_logic(&seg1_en, GPIO_HIGH);
            __delay_us(5000);
            ret = gpio_pin_write_logic(&seg1_en, GPIO_LOW);
        }
        number++;
        if(100==number){
            number = 0;
        }
    }

    return (EXIT_SUCCESS);
}

void application_initialize(void){
    Std_ReturnType ret = E_NOT_OK;
    ret = seven_segment_initialize(&seg1);
    ret = gpio_pin_intialize(&seg1_en);
    ret = gpio_pin_intialize(&seg2_en);
}